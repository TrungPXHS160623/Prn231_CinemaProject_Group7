@page
@model WebClient.Pages.Staff.Orders.UpdateDetailModel
@{
    ViewData["Title"] = "Update Order Detail";
}
<div class="container mt-4">
    <h1>@ViewData["Title"]</h1>
    <div class="row justify-content-center">
        <div class="col-md-8">
            <form method="post">
                <div class="form-group">
                    <input asp-for="OrderDetail.OrderDetailId" type="hidden" />
                    <input asp-for="OrderDetail.OrderId" type="hidden" />
                    <label asp-for="SelectedTheaterId" class="control-label">Theater</label>
                    <select asp-for="SelectedTheaterId" class="form-control" asp-items="Model.Theaters">
                        <option value="">Select a theater</option>
                    </select>
                    <span asp-validation-for="SelectedTheaterId" class="text-danger"></span>
                </div>
                <div class="form-group" id="movie-select">
                    <label asp-for="SelectedMovieId" class="control-label">Movie</label>
                    <select asp-for="SelectedMovieId" class="form-control" asp-items="Model.Movies">
                        <option value="">Select a movie</option>
                    </select>
                    <span asp-validation-for="SelectedMovieId" class="text-danger"></span>
                </div>
                <div class="form-group" id="showtime-select">
                    <label asp-for="OrderDetail.ShowtimeId" class="control-label">Showtime</label>
                    <select asp-for="OrderDetail.ShowtimeId" class="form-control" asp-items="Model.Showtimes">
                        <option value="">Select a showtime</option>
                    </select>
                    <span asp-validation-for="OrderDetail.ShowtimeId" class="text-danger"></span>
                </div>
                <div class="form-group" id="seat-select">
                    <label asp-for="OrderDetail.SeatId" class="control-label">Seat</label>
                    <select asp-for="OrderDetail.SeatId" class="form-control" asp-items="Model.Seats">
                        <option value="">Select a seat</option>
                    </select>
                    <span asp-validation-for="OrderDetail.SeatId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OrderDetail.Quantity" class="control-label"></label>
                    <input asp-for="OrderDetail.Quantity" class="form-control" type="number" min="1" max="50" value="1" />
                    <span asp-validation-for="OrderDetail.Quantity" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <a asp-page="./List" class="btn btn-secondary">Cancel</a>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            var selectedTheaterId = '@Model.SelectedTheaterId';
            var selectedMovieId = '@Model.SelectedMovieId';
            var selectedShowtimeId = '@Model.OrderDetail.ShowtimeId';
            var selectedSeatId = '@Model.OrderDetail.SeatId';

            var theaterElement = $('#SelectedTheaterId');
            if (theaterElement.length) {
                theaterElement.change(function () {
                    var theaterId = $(this).val();
                    if (theaterId) {
                        // Fetch movies based on the selected theater through showtimes
                        $.get(`http://localhost:5280/api/Movie/GetMovieByTheater/${theaterId}`, function (data) {
                            var movieSelect = $('#SelectedMovieId');
                            movieSelect.empty();
                            movieSelect.append($('<option>', { value: '', text: 'Select a movie' }));
                            data.forEach(function (movie) {
                                movieSelect.append($('<option>', {
                                    value: movie.movieId,
                                    text: movie.title
                                }));
                            });
                            $('#movie-select').show();
                            if (selectedMovieId) {
                                movieSelect.val(selectedMovieId);
                                movieSelect.trigger('change'); // Explicitly trigger the change event
                            }
                        });
                    }
                });

                if (selectedTheaterId) {
                    theaterElement.val(selectedTheaterId);
                    setTimeout(function () {
                        theaterElement.trigger('change'); // Manually trigger the change event with a slight delay
                    }, 100);
                }
            }

            $('#SelectedMovieId').change(function () {
                var theaterId = $('#SelectedTheaterId').val();
                var movieId = $(this).val();
                if (movieId && theaterId) {
                    // Fetch showtimes based on the selected movie and theater
                    $.get(`http://localhost:5280/api/Showtime/GetShowTimeByMovieTheater/${movieId}/${theaterId}`, function (data) {
                        var showtimeSelect = $('#OrderDetail_ShowtimeId');
                        showtimeSelect.empty();
                        showtimeSelect.append($('<option>', { value: '', text: 'Select a showtime' }));
                        $.each(data, function (index, showtime) {
                            var startTime = new Date(showtime.startTime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                            var endTime = new Date(showtime.endTime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                            showtimeSelect.append($('<option>', {
                                value: showtime.showtimeId,
                                text: startTime + " - " + endTime + " - " + showtime.roomeName
                            }));
                        });
                        $('#showtime-select').show();
                        if (selectedShowtimeId) {
                            showtimeSelect.val(selectedShowtimeId);
                            showtimeSelect.trigger('change'); // Explicitly trigger the change event
                        }
                    });
                } else {
                    $('#showtime-select').hide();
                    $('#seat-select').hide();
                }
            });

            $('#OrderDetail_ShowtimeId').change(function () {
                var showtimeId = $(this).val();
                if (showtimeId) {
                    // Fetch seats based on the selected showtime
                    $.get(`http://localhost:5280/api/Seat/GetSeatByShowTime/${showtimeId}`, function (data) {
                        var seatSelect = $('#OrderDetail_SeatId');
                        seatSelect.empty();
                        seatSelect.append($('<option>', { value: '', text: 'Select a seat' }));
                        $.each(data, function (index, seat) {
                            seatSelect.append($('<option>', {
                                value: seat.seatId,
                                text: seat.seatNumber + " - " + seat.typeName
                            }));
                        });
                        $('#seat-select').show();
                        if (selectedSeatId) {
                            seatSelect.val(selectedSeatId);
                        }
                    });
                } else {
                    $('#seat-select').hide();
                }
            });
        });
    </script>
}
